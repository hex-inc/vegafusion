[simple_aggs_unbounded]
athena = """
WITH \
values0 AS (SELECT * FROM (VALUES (1, 2, 'A'), (3, 4, 'BB'), (5, 6, 'A'), (7, 8, 'BB'), (9, 10, 'A')) AS "_values" ("a", "b", "c")), \
values1 AS (SELECT "a", "b", "c", sum("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "sum_b", count("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "count_part_b", avg("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "cume_mean_b", min("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "min_b", max("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "max_b" FROM values0) \
SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
bigquery = """
WITH \
values0 AS (SELECT 1 AS `a`, 2 AS `b`, 'A' AS `c` UNION ALL SELECT 3 AS `a`, 4 AS `b`, 'BB' AS `c` UNION ALL SELECT 5 AS `a`, 6 AS `b`, 'A' AS `c` UNION ALL SELECT 7 AS `a`, 8 AS `b`, 'BB' AS `c` UNION ALL SELECT 9 AS `a`, 10 AS `b`, 'A' AS `c`), \
values1 AS (SELECT `a`, `b`, `c`, sum(`b`) OVER (ORDER BY `a` ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS `sum_b`, count(`b`) OVER (PARTITION BY `c` ORDER BY `a` ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS `count_part_b`, avg(`b`) OVER (ORDER BY `a` ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS `cume_mean_b`, min(`b`) OVER (PARTITION BY `c` ORDER BY `a` ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS `min_b`, max(`b`) OVER (ORDER BY `a` ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS `max_b` FROM values0) \
SELECT * FROM values1 ORDER BY `a` ASC NULLS FIRST
"""
clickhouse = """
WITH \
values0 AS (SELECT 1 AS "a", 2 AS "b", 'A' AS "c" UNION ALL SELECT 3 AS "a", 4 AS "b", 'BB' AS "c" UNION ALL SELECT 5 AS "a", 6 AS "b", 'A' AS "c" UNION ALL SELECT 7 AS "a", 8 AS "b", 'BB' AS "c" UNION ALL SELECT 9 AS "a", 10 AS "b", 'A' AS "c"), \
values1 AS (SELECT "a", "b", "c", sum("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "sum_b", count("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "count_part_b", avg("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "cume_mean_b", min("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "min_b", max("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "max_b" FROM values0) \
SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
databricks = """
WITH \
values0 AS (SELECT * FROM (VALUES (1, 2, 'A'), (3, 4, 'BB'), (5, 6, 'A'), (7, 8, 'BB'), (9, 10, 'A')) AS `_values` (`a`, `b`, `c`)), \
values1 AS (SELECT `a`, `b`, `c`, sum(`b`) OVER (ORDER BY `a` ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS `sum_b`, count(`b`) OVER (PARTITION BY `c` ORDER BY `a` ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS `count_part_b`, avg(`b`) OVER (ORDER BY `a` ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS `cume_mean_b`, min(`b`) OVER (PARTITION BY `c` ORDER BY `a` ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS `min_b`, max(`b`) OVER (ORDER BY `a` ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS `max_b` FROM values0) \
SELECT * FROM values1 ORDER BY `a` ASC NULLS FIRST
"""
datafusion = """
WITH \
values0 AS (SELECT * FROM (VALUES (1, 2, 'A'), (3, 4, 'BB'), (5, 6, 'A'), (7, 8, 'BB'), (9, 10, 'A')) AS "_values" ("a", "b", "c")), \
values1 AS (SELECT "a", "b", "c", sum("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "sum_b", count("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "count_part_b", avg("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "cume_mean_b", min("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "min_b", max("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "max_b" FROM values0) \
SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
dremio = """
WITH \
values0 AS (SELECT * FROM (VALUES (1, 2, 'A'), (3, 4, 'BB'), (5, 6, 'A'), (7, 8, 'BB'), (9, 10, 'A')) AS "_values" ("a", "b", "c")), \
values1 AS (SELECT "a", "b", "c", sum("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "sum_b", count("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "count_part_b", avg("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "cume_mean_b", min("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "min_b", max("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "max_b" FROM values0) \
SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
duckdb = """
WITH \
values0 AS (SELECT * FROM (VALUES (1, 2, 'A'), (3, 4, 'BB'), (5, 6, 'A'), (7, 8, 'BB'), (9, 10, 'A')) AS "_values" ("a", "b", "c")), \
values1 AS (SELECT "a", "b", "c", sum("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "sum_b", count("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "count_part_b", avg("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "cume_mean_b", min("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "min_b", max("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "max_b" FROM values0) \
SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
mysql = """
WITH \
values0 AS (SELECT * FROM (VALUES ROW(1, 2, 'A'), ROW(3, 4, 'BB'), ROW(5, 6, 'A'), ROW(7, 8, 'BB'), ROW(9, 10, 'A')) AS `_values` (`a`, `b`, `c`)), \
values1 AS (SELECT `a`, `b`, `c`, sum(`b`) OVER (ORDER BY `a` ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS `sum_b`, count(`b`) OVER (PARTITION BY `c` ORDER BY `a` ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS `count_part_b`, avg(`b`) OVER (ORDER BY `a` ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS `cume_mean_b`, min(`b`) OVER (PARTITION BY `c` ORDER BY `a` ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS `min_b`, max(`b`) OVER (ORDER BY `a` ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS `max_b` FROM values0) \
SELECT * FROM values1 ORDER BY `a` ASC
"""
postgres = """
WITH \
values0 AS (SELECT * FROM (VALUES (1, 2, 'A'), (3, 4, 'BB'), (5, 6, 'A'), (7, 8, 'BB'), (9, 10, 'A')) AS "_values" ("a", "b", "c")), \
values1 AS (SELECT "a", "b", "c", sum("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "sum_b", count("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "count_part_b", avg("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "cume_mean_b", min("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "min_b", max("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "max_b" FROM values0) \
SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
redshift = """
WITH \
values0 AS (SELECT 1 AS "a", 2 AS "b", 'A' AS "c" UNION ALL SELECT 3 AS "a", 4 AS "b", 'BB' AS "c" UNION ALL SELECT 5 AS "a", 6 AS "b", 'A' AS "c" UNION ALL SELECT 7 AS "a", 8 AS "b", 'BB' AS "c" UNION ALL SELECT 9 AS "a", 10 AS "b", 'A' AS "c"), \
values1 AS (SELECT "a", "b", "c", sum("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "sum_b", count("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "count_part_b", avg("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "cume_mean_b", min("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "min_b", max("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "max_b" FROM values0) \
SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
snowflake = """
WITH \
values0 AS (SELECT "COLUMN1" AS "a", "COLUMN2" AS "b", "COLUMN3" AS "c" FROM (VALUES (1, 2, 'A'), (3, 4, 'BB'), (5, 6, 'A'), (7, 8, 'BB'), (9, 10, 'A'))), \
values1 AS (SELECT "a", "b", "c", sum("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "sum_b", count("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "count_part_b", avg("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "cume_mean_b", min("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "min_b", max("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "max_b" FROM values0) \
SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
sqlite = """
WITH \
values0 AS (SELECT "column1" AS "a", "column2" AS "b", "column3" AS "c" FROM (VALUES (1, 2, 'A'), (3, 4, 'BB'), (5, 6, 'A'), (7, 8, 'BB'), (9, 10, 'A'))), \
values1 AS (SELECT "a", "b", "c", sum("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "sum_b", count("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "count_part_b", avg("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "cume_mean_b", min("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "min_b", max("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "max_b" FROM values0) \
SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
result = '''
+---+----+----+-------+--------------+-------------+-------+-------+
| a | b  | c  | sum_b | count_part_b | cume_mean_b | min_b | max_b |
+---+----+----+-------+--------------+-------------+-------+-------+
| 1 | 2  | A  | 2     | 1            | 2           | 2     | 2     |
| 3 | 4  | BB | 6     | 1            | 3           | 4     | 4     |
| 5 | 6  | A  | 12    | 2            | 4           | 2     | 6     |
| 7 | 8  | BB | 20    | 2            | 5           | 4     | 8     |
| 9 | 10 | A  | 30    | 3            | 6           | 2     | 10    |
+---+----+----+-------+--------------+-------------+-------+-------+
'''


[simple_aggs_bounded]
athena = """
WITH \
values0 AS (SELECT * FROM (VALUES (1, 2, 'A'), (3, 4, 'BB'), (5, 6, 'A'), (7, 8, 'BB'), (9, 10, 'A')) AS "_values" ("a", "b", "c")), \
values1 AS (SELECT "a", "b", "c", sum("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "sum_b", count("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "count_part_b", avg("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "cume_mean_b", min("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "min_b", max("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "max_b" FROM values0) \
SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
bigquery = """
WITH \
values0 AS (SELECT 1 AS `a`, 2 AS `b`, 'A' AS `c` UNION ALL SELECT 3 AS `a`, 4 AS `b`, 'BB' AS `c` UNION ALL SELECT 5 AS `a`, 6 AS `b`, 'A' AS `c` UNION ALL SELECT 7 AS `a`, 8 AS `b`, 'BB' AS `c` UNION ALL SELECT 9 AS `a`, 10 AS `b`, 'A' AS `c`), \
values1 AS (SELECT `a`, `b`, `c`, sum(`b`) OVER (ORDER BY `a` ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS `sum_b`, count(`b`) OVER (PARTITION BY `c` ORDER BY `a` ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS `count_part_b`, avg(`b`) OVER (ORDER BY `a` ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS `cume_mean_b`, min(`b`) OVER (PARTITION BY `c` ORDER BY `a` ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS `min_b`, max(`b`) OVER (ORDER BY `a` ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS `max_b` FROM values0) \
SELECT * FROM values1 ORDER BY `a` ASC NULLS FIRST
"""
clickhouse = """
WITH \
values0 AS (SELECT 1 AS "a", 2 AS "b", 'A' AS "c" UNION ALL SELECT 3 AS "a", 4 AS "b", 'BB' AS "c" UNION ALL SELECT 5 AS "a", 6 AS "b", 'A' AS "c" UNION ALL SELECT 7 AS "a", 8 AS "b", 'BB' AS "c" UNION ALL SELECT 9 AS "a", 10 AS "b", 'A' AS "c"), \
values1 AS (SELECT "a", "b", "c", sum("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "sum_b", count("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "count_part_b", avg("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "cume_mean_b", min("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "min_b", max("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "max_b" FROM values0) \
SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
databricks = """
WITH \
values0 AS (SELECT * FROM (VALUES (1, 2, 'A'), (3, 4, 'BB'), (5, 6, 'A'), (7, 8, 'BB'), (9, 10, 'A')) AS `_values` (`a`, `b`, `c`)), \
values1 AS (SELECT `a`, `b`, `c`, sum(`b`) OVER (ORDER BY `a` ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS `sum_b`, count(`b`) OVER (PARTITION BY `c` ORDER BY `a` ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS `count_part_b`, avg(`b`) OVER (ORDER BY `a` ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS `cume_mean_b`, min(`b`) OVER (PARTITION BY `c` ORDER BY `a` ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS `min_b`, max(`b`) OVER (ORDER BY `a` ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS `max_b` FROM values0) \
SELECT * FROM values1 ORDER BY `a` ASC NULLS FIRST
"""
datafusion = """
WITH \
values0 AS (SELECT * FROM (VALUES (1, 2, 'A'), (3, 4, 'BB'), (5, 6, 'A'), (7, 8, 'BB'), (9, 10, 'A')) AS "_values" ("a", "b", "c")), \
values1 AS (SELECT "a", "b", "c", sum("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "sum_b", count("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "count_part_b", avg("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "cume_mean_b", min("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "min_b", max("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "max_b" FROM values0) \
SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
dremio = "UNSUPPORTED"
duckdb = """
WITH \
values0 AS (SELECT * FROM (VALUES (1, 2, 'A'), (3, 4, 'BB'), (5, 6, 'A'), (7, 8, 'BB'), (9, 10, 'A')) AS "_values" ("a", "b", "c")), \
values1 AS (SELECT "a", "b", "c", sum("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "sum_b", count("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "count_part_b", avg("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "cume_mean_b", min("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "min_b", max("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "max_b" FROM values0) \
SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
mysql = """
WITH \
values0 AS (SELECT * FROM (VALUES ROW(1, 2, 'A'), ROW(3, 4, 'BB'), ROW(5, 6, 'A'), ROW(7, 8, 'BB'), ROW(9, 10, 'A')) AS `_values` (`a`, `b`, `c`)), \
values1 AS (SELECT `a`, `b`, `c`, sum(`b`) OVER (ORDER BY `a` ASC ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS `sum_b`, count(`b`) OVER (PARTITION BY `c` ORDER BY `a` ASC ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS `count_part_b`, avg(`b`) OVER (ORDER BY `a` ASC ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS `cume_mean_b`, min(`b`) OVER (PARTITION BY `c` ORDER BY `a` ASC ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS `min_b`, max(`b`) OVER (ORDER BY `a` ASC ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS `max_b` FROM values0) \
SELECT * FROM values1 ORDER BY `a` ASC
"""
postgres = """
WITH \
values0 AS (SELECT * FROM (VALUES (1, 2, 'A'), (3, 4, 'BB'), (5, 6, 'A'), (7, 8, 'BB'), (9, 10, 'A')) AS "_values" ("a", "b", "c")), \
values1 AS (SELECT "a", "b", "c", sum("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "sum_b", count("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "count_part_b", avg("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "cume_mean_b", min("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "min_b", max("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "max_b" FROM values0) \
SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
redshift = """
WITH \
values0 AS (SELECT 1 AS "a", 2 AS "b", 'A' AS "c" UNION ALL SELECT 3 AS "a", 4 AS "b", 'BB' AS "c" UNION ALL SELECT 5 AS "a", 6 AS "b", 'A' AS "c" UNION ALL SELECT 7 AS "a", 8 AS "b", 'BB' AS "c" UNION ALL SELECT 9 AS "a", 10 AS "b", 'A' AS "c"), \
values1 AS (SELECT "a", "b", "c", sum("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "sum_b", count("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "count_part_b", avg("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "cume_mean_b", min("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "min_b", max("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "max_b" FROM values0) \
SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
snowflake = """
WITH \
values0 AS (SELECT "COLUMN1" AS "a", "COLUMN2" AS "b", "COLUMN3" AS "c" FROM (VALUES (1, 2, 'A'), (3, 4, 'BB'), (5, 6, 'A'), (7, 8, 'BB'), (9, 10, 'A'))), \
values1 AS (SELECT "a", "b", "c", sum("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "sum_b", count("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "count_part_b", avg("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "cume_mean_b", min("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "min_b", max("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "max_b" FROM values0) \
SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
sqlite = """
WITH \
values0 AS (SELECT "column1" AS "a", "column2" AS "b", "column3" AS "c" FROM (VALUES (1, 2, 'A'), (3, 4, 'BB'), (5, 6, 'A'), (7, 8, 'BB'), (9, 10, 'A'))), \
values1 AS (SELECT "a", "b", "c", sum("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "sum_b", count("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "count_part_b", avg("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "cume_mean_b", min("b") OVER (PARTITION BY "c" ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "min_b", max("b") OVER (ORDER BY "a" ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS "max_b" FROM values0) \
SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
result = '''
+---+----+----+-------+--------------+-------------+-------+-------+
| a | b  | c  | sum_b | count_part_b | cume_mean_b | min_b | max_b |
+---+----+----+-------+--------------+-------------+-------+-------+
| 1 | 2  | A  | 2     | 1            | 2           | 2     | 2     |
| 3 | 4  | BB | 6     | 1            | 3           | 4     | 4     |
| 5 | 6  | A  | 10    | 2            | 5           | 2     | 6     |
| 7 | 8  | BB | 14    | 2            | 7           | 4     | 8     |
| 9 | 10 | A  | 18    | 2            | 9           | 6     | 10    |
+---+----+----+-------+--------------+-------------+-------+-------+
'''
