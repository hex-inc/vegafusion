[numeric_operators]
athena = """
WITH values0 AS (SELECT * FROM (VALUES (1, 2), (3, 4), (6, 6), (9, 8), (12, 10)) AS "_values" ("a", "b")), values1 AS (SELECT "a", "b", ("a" + "b") AS "add", ("a" - "b") AS "sub", ("a" * "b") AS "mul", ("a" / 2) AS "div", ("a" % 4) AS "mod", ("a" = "b") AS "eq", ("a" <> "b") AS "neq", ("a" > 5) AS "gt", ("a" >= 5) AS "gte", ("b" < 6) AS "lt", ("b" <= 6) AS "lte", (-"a") AS "neg" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
bigquery = """
WITH values0 AS (SELECT 1 AS `a`, 2 AS `b` UNION ALL SELECT 3 AS `a`, 4 AS `b` UNION ALL SELECT 6 AS `a`, 6 AS `b` UNION ALL SELECT 9 AS `a`, 8 AS `b` UNION ALL SELECT 12 AS `a`, 10 AS `b`), values1 AS (SELECT `a`, `b`, (`a` + `b`) AS `add`, (`a` - `b`) AS `sub`, (`a` * `b`) AS `mul`, (`a` / 2) AS `div`, MOD(`a`, 4) AS `mod`, (`a` = `b`) AS `eq`, (`a` <> `b`) AS `neq`, (`a` > 5) AS `gt`, (`a` >= 5) AS `gte`, (`b` < 6) AS `lt`, (`b` <= 6) AS `lte`, (-`a`) AS `neg` FROM values0) SELECT * FROM values1 ORDER BY `a` ASC NULLS FIRST
"""
clickhouse = """
WITH values0 AS (SELECT 1 AS "a", 2 AS "b" UNION ALL SELECT 3 AS "a", 4 AS "b" UNION ALL SELECT 6 AS "a", 6 AS "b" UNION ALL SELECT 9 AS "a", 8 AS "b" UNION ALL SELECT 12 AS "a", 10 AS "b"), values1 AS (SELECT "a", "b", ("a" + "b") AS "add", ("a" - "b") AS "sub", ("a" * "b") AS "mul", ("a" / 2) AS "div", ("a" % 4) AS "mod", ("a" = "b") AS "eq", ("a" <> "b") AS "neq", ("a" > 5) AS "gt", ("a" >= 5) AS "gte", ("b" < 6) AS "lt", ("b" <= 6) AS "lte", (-"a") AS "neg" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
databricks = """
WITH values0 AS (SELECT * FROM (VALUES (1, 2), (3, 4), (6, 6), (9, 8), (12, 10)) AS `_values` (`a`, `b`)), values1 AS (SELECT `a`, `b`, (`a` + `b`) AS `add`, (`a` - `b`) AS `sub`, (`a` * `b`) AS `mul`, (`a` / 2) AS `div`, (`a` % 4) AS `mod`, (`a` = `b`) AS `eq`, (`a` <> `b`) AS `neq`, (`a` > 5) AS `gt`, (`a` >= 5) AS `gte`, (`b` < 6) AS `lt`, (`b` <= 6) AS `lte`, (-`a`) AS `neg` FROM values0) SELECT * FROM values1 ORDER BY `a` ASC NULLS FIRST
"""
datafusion = """
WITH values0 AS (SELECT * FROM (VALUES (1, 2), (3, 4), (6, 6), (9, 8), (12, 10)) AS "_values" ("a", "b")), values1 AS (SELECT "a", "b", ("a" + "b") AS "add", ("a" - "b") AS "sub", ("a" * "b") AS "mul", ("a" / 2) AS "div", ("a" % 4) AS "mod", ("a" = "b") AS "eq", ("a" <> "b") AS "neq", ("a" > 5) AS "gt", ("a" >= 5) AS "gte", ("b" < 6) AS "lt", ("b" <= 6) AS "lte", (-"a") AS "neg" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
dremio = """
WITH values0 AS (SELECT * FROM (VALUES (1, 2), (3, 4), (6, 6), (9, 8), (12, 10)) AS "_values" ("a", "b")), values1 AS (SELECT "a", "b", ("a" + "b") AS "add", ("a" - "b") AS "sub", ("a" * "b") AS "mul", ("a" / 2) AS "div", ("a" % 4) AS "mod", ("a" = "b") AS "eq", ("a" <> "b") AS "neq", ("a" > 5) AS "gt", ("a" >= 5) AS "gte", ("b" < 6) AS "lt", ("b" <= 6) AS "lte", (-"a") AS "neg" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
duckdb = """
WITH values0 AS (SELECT * FROM (VALUES (1, 2), (3, 4), (6, 6), (9, 8), (12, 10)) AS "_values" ("a", "b")), values1 AS (SELECT "a", "b", ("a" + "b") AS "add", ("a" - "b") AS "sub", ("a" * "b") AS "mul", ("a" / 2) AS "div", ("a" % 4) AS "mod", ("a" = "b") AS "eq", ("a" <> "b") AS "neq", ("a" > 5) AS "gt", ("a" >= 5) AS "gte", ("b" < 6) AS "lt", ("b" <= 6) AS "lte", (-"a") AS "neg" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
mysql = """
WITH values0 AS (SELECT * FROM (VALUES ROW(1, 2), ROW(3, 4), ROW(6, 6), ROW(9, 8), ROW(12, 10)) AS `_values` (`a`, `b`)), values1 AS (SELECT `a`, `b`, (`a` + `b`) AS `add`, (`a` - `b`) AS `sub`, (`a` * `b`) AS `mul`, (`a` / 2) AS `div`, (`a` % 4) AS `mod`, (`a` = `b`) AS `eq`, (`a` <> `b`) AS `neq`, (`a` > 5) AS `gt`, (`a` >= 5) AS `gte`, (`b` < 6) AS `lt`, (`b` <= 6) AS `lte`, (-`a`) AS `neg` FROM values0) SELECT * FROM values1 ORDER BY `a` ASC
"""
postgres = """
WITH values0 AS (SELECT * FROM (VALUES (1, 2), (3, 4), (6, 6), (9, 8), (12, 10)) AS "_values" ("a", "b")), values1 AS (SELECT "a", "b", ("a" + "b") AS "add", ("a" - "b") AS "sub", ("a" * "b") AS "mul", ("a" / 2) AS "div", ("a" % 4) AS "mod", ("a" = "b") AS "eq", ("a" <> "b") AS "neq", ("a" > 5) AS "gt", ("a" >= 5) AS "gte", ("b" < 6) AS "lt", ("b" <= 6) AS "lte", (-"a") AS "neg" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
redshift = """
WITH values0 AS (SELECT 1 AS "a", 2 AS "b" UNION ALL SELECT 3 AS "a", 4 AS "b" UNION ALL SELECT 6 AS "a", 6 AS "b" UNION ALL SELECT 9 AS "a", 8 AS "b" UNION ALL SELECT 12 AS "a", 10 AS "b"), values1 AS (SELECT "a", "b", ("a" + "b") AS "add", ("a" - "b") AS "sub", ("a" * "b") AS "mul", ("a" / 2) AS "div", ("a" % 4) AS "mod", ("a" = "b") AS "eq", ("a" <> "b") AS "neq", ("a" > 5) AS "gt", ("a" >= 5) AS "gte", ("b" < 6) AS "lt", ("b" <= 6) AS "lte", (-"a") AS "neg" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
snowflake = """
WITH values0 AS (SELECT "COLUMN1" AS "a", "COLUMN2" AS "b" FROM (VALUES (1, 2), (3, 4), (6, 6), (9, 8), (12, 10))), values1 AS (SELECT "a", "b", ("a" + "b") AS "add", ("a" - "b") AS "sub", ("a" * "b") AS "mul", ("a" / 2) AS "div", ("a" % 4) AS "mod", ("a" = "b") AS "eq", ("a" <> "b") AS "neq", ("a" > 5) AS "gt", ("a" >= 5) AS "gte", ("b" < 6) AS "lt", ("b" <= 6) AS "lte", (-"a") AS "neg" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
result = '''
+----+----+-----+-----+-----+-----+-----+-------+-------+-------+-------+-------+-------+-----+
| a  | b  | add | sub | mul | div | mod | eq    | neq   | gt    | gte   | lt    | lte   | neg |
+----+----+-----+-----+-----+-----+-----+-------+-------+-------+-------+-------+-------+-----+
| 1  | 2  | 3   | -1  | 2   | 0   | 1   | false | true  | false | false | true  | true  | -1  |
| 3  | 4  | 7   | -1  | 12  | 1   | 3   | false | true  | false | false | true  | true  | -3  |
| 6  | 6  | 12  | 0   | 36  | 3   | 2   | true  | false | true  | true  | false | true  | -6  |
| 9  | 8  | 17  | 1   | 72  | 4   | 1   | false | true  | true  | true  | false | false | -9  |
| 12 | 10 | 22  | 2   | 120 | 6   | 0   | false | true  | true  | true  | false | false | -12 |
+----+----+-----+-----+-----+-----+-----+-------+-------+-------+-------+-------+-------+-----+
'''


[logical_operators]
athena = """
WITH values0 AS (SELECT * FROM (VALUES (true, true, 1), (true, false, 2), (false, true, 3), (false, false, 4), (false, true, 5)) AS "_values" ("a", "b", "i")), values1 AS (SELECT "i", "a", "b", ("a" OR "b") AS "or", ("a" OR true) AS "or2", ("a" AND "b") AS "and", ("a" AND true) AS "and2", (NOT "a") AS "not", ("a" = "b") AS "eq", ("a" <> "b") AS "neq" FROM values0) SELECT * FROM values1 ORDER BY "i" ASC NULLS FIRST
"""
bigquery = """
WITH values0 AS (SELECT true AS `a`, true AS `b`, 1 AS `i` UNION ALL SELECT true AS `a`, false AS `b`, 2 AS `i` UNION ALL SELECT false AS `a`, true AS `b`, 3 AS `i` UNION ALL SELECT false AS `a`, false AS `b`, 4 AS `i` UNION ALL SELECT false AS `a`, true AS `b`, 5 AS `i`), values1 AS (SELECT `i`, `a`, `b`, (`a` OR `b`) AS `or`, (`a` OR true) AS `or2`, (`a` AND `b`) AS `and`, (`a` AND true) AS `and2`, (NOT `a`) AS `not`, (`a` = `b`) AS `eq`, (`a` <> `b`) AS `neq` FROM values0) SELECT * FROM values1 ORDER BY `i` ASC NULLS FIRST
"""
clickhouse = """
WITH values0 AS (SELECT true AS "a", true AS "b", 1 AS "i" UNION ALL SELECT true AS "a", false AS "b", 2 AS "i" UNION ALL SELECT false AS "a", true AS "b", 3 AS "i" UNION ALL SELECT false AS "a", false AS "b", 4 AS "i" UNION ALL SELECT false AS "a", true AS "b", 5 AS "i"), values1 AS (SELECT "i", "a", "b", ("a" OR "b") AS "or", ("a" OR true) AS "or2", ("a" AND "b") AS "and", ("a" AND true) AS "and2", (NOT "a") AS "not", ("a" = "b") AS "eq", ("a" <> "b") AS "neq" FROM values0) SELECT * FROM values1 ORDER BY "i" ASC NULLS FIRST
"""
databricks = """
WITH values0 AS (SELECT * FROM (VALUES (true, true, 1), (true, false, 2), (false, true, 3), (false, false, 4), (false, true, 5)) AS `_values` (`a`, `b`, `i`)), values1 AS (SELECT `i`, `a`, `b`, (`a` OR `b`) AS `or`, (`a` OR true) AS `or2`, (`a` AND `b`) AS `and`, (`a` AND true) AS `and2`, (NOT `a`) AS `not`, (`a` = `b`) AS `eq`, (`a` <> `b`) AS `neq` FROM values0) SELECT * FROM values1 ORDER BY `i` ASC NULLS FIRST
"""
datafusion = """
WITH values0 AS (SELECT * FROM (VALUES (true, true, 1), (true, false, 2), (false, true, 3), (false, false, 4), (false, true, 5)) AS "_values" ("a", "b", "i")), values1 AS (SELECT "i", "a", "b", ("a" OR "b") AS "or", ("a" OR true) AS "or2", ("a" AND "b") AS "and", ("a" AND true) AS "and2", (NOT "a") AS "not", ("a" = "b") AS "eq", ("a" <> "b") AS "neq" FROM values0) SELECT * FROM values1 ORDER BY "i" ASC NULLS FIRST
"""
dremio = """
WITH values0 AS (SELECT * FROM (VALUES (true, true, 1), (true, false, 2), (false, true, 3), (false, false, 4), (false, true, 5)) AS "_values" ("a", "b", "i")), values1 AS (SELECT "i", "a", "b", ("a" OR "b") AS "or", ("a" OR true) AS "or2", ("a" AND "b") AS "and", ("a" AND true) AS "and2", (NOT "a") AS "not", ("a" = "b") AS "eq", ("a" <> "b") AS "neq" FROM values0) SELECT * FROM values1 ORDER BY "i" ASC NULLS FIRST
"""
duckdb = """
WITH values0 AS (SELECT * FROM (VALUES (true, true, 1), (true, false, 2), (false, true, 3), (false, false, 4), (false, true, 5)) AS "_values" ("a", "b", "i")), values1 AS (SELECT "i", "a", "b", ("a" OR "b") AS "or", ("a" OR true) AS "or2", ("a" AND "b") AS "and", ("a" AND true) AS "and2", (NOT "a") AS "not", ("a" = "b") AS "eq", ("a" <> "b") AS "neq" FROM values0) SELECT * FROM values1 ORDER BY "i" ASC NULLS FIRST
"""
mysql = """
WITH values0 AS (SELECT * FROM (VALUES ROW(true, true, 1), ROW(true, false, 2), ROW(false, true, 3), ROW(false, false, 4), ROW(false, true, 5)) AS `_values` (`a`, `b`, `i`)), values1 AS (SELECT `i`, `a`, `b`, (`a` OR `b`) AS `or`, (`a` OR true) AS `or2`, (`a` AND `b`) AS `and`, (`a` AND true) AS `and2`, (NOT `a`) AS `not`, (`a` = `b`) AS `eq`, (`a` <> `b`) AS `neq` FROM values0) SELECT * FROM values1 ORDER BY `i` ASC
"""
postgres = """
WITH values0 AS (SELECT * FROM (VALUES (true, true, 1), (true, false, 2), (false, true, 3), (false, false, 4), (false, true, 5)) AS "_values" ("a", "b", "i")), values1 AS (SELECT "i", "a", "b", ("a" OR "b") AS "or", ("a" OR true) AS "or2", ("a" AND "b") AS "and", ("a" AND true) AS "and2", (NOT "a") AS "not", ("a" = "b") AS "eq", ("a" <> "b") AS "neq" FROM values0) SELECT * FROM values1 ORDER BY "i" ASC NULLS FIRST
"""
redshift = """
WITH values0 AS (SELECT true AS "a", true AS "b", 1 AS "i" UNION ALL SELECT true AS "a", false AS "b", 2 AS "i" UNION ALL SELECT false AS "a", true AS "b", 3 AS "i" UNION ALL SELECT false AS "a", false AS "b", 4 AS "i" UNION ALL SELECT false AS "a", true AS "b", 5 AS "i"), values1 AS (SELECT "i", "a", "b", ("a" OR "b") AS "or", ("a" OR true) AS "or2", ("a" AND "b") AS "and", ("a" AND true) AS "and2", (NOT "a") AS "not", ("a" = "b") AS "eq", ("a" <> "b") AS "neq" FROM values0) SELECT * FROM values1 ORDER BY "i" ASC NULLS FIRST
"""
snowflake = """
WITH values0 AS (SELECT "COLUMN1" AS "a", "COLUMN2" AS "b", "COLUMN3" AS "i" FROM (VALUES (true, true, 1), (true, false, 2), (false, true, 3), (false, false, 4), (false, true, 5))), values1 AS (SELECT "i", "a", "b", ("a" OR "b") AS "or", ("a" OR true) AS "or2", ("a" AND "b") AS "and", ("a" AND true) AS "and2", (NOT "a") AS "not", ("a" = "b") AS "eq", ("a" <> "b") AS "neq" FROM values0) SELECT * FROM values1 ORDER BY "i" ASC NULLS FIRST
"""
result = '''
+---+-------+-------+-------+------+-------+-------+-------+-------+-------+
| i | a     | b     | or    | or2  | and   | and2  | not   | eq    | neq   |
+---+-------+-------+-------+------+-------+-------+-------+-------+-------+
| 1 | true  | true  | true  | true | true  | true  | false | true  | false |
| 2 | true  | false | true  | true | false | true  | false | false | true  |
| 3 | false | true  | true  | true | false | false | true  | false | true  |
| 4 | false | false | false | true | false | false | true  | true  | false |
| 5 | false | true  | true  | true | false | false | true  | false | true  |
+---+-------+-------+-------+------+-------+-------+-------+-------+-------+
'''


[between]
athena = """
WITH values0 AS (SELECT * FROM (VALUES (1, 2), (3, 4), (6, 6), (9, 8), (12, 10)) AS "_values" ("a", "b")), values1 AS (SELECT "a", "b", "a" BETWEEN 0 AND "b" AS "bet1", "a" NOT BETWEEN 0 AND "b" AS "nbet1" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
bigquery = """
WITH values0 AS (SELECT 1 AS `a`, 2 AS `b` UNION ALL SELECT 3 AS `a`, 4 AS `b` UNION ALL SELECT 6 AS `a`, 6 AS `b` UNION ALL SELECT 9 AS `a`, 8 AS `b` UNION ALL SELECT 12 AS `a`, 10 AS `b`), values1 AS (SELECT `a`, `b`, `a` BETWEEN 0 AND `b` AS `bet1`, `a` NOT BETWEEN 0 AND `b` AS `nbet1` FROM values0) SELECT * FROM values1 ORDER BY `a` ASC NULLS FIRST
"""
clickhouse = """
WITH values0 AS (SELECT 1 AS "a", 2 AS "b" UNION ALL SELECT 3 AS "a", 4 AS "b" UNION ALL SELECT 6 AS "a", 6 AS "b" UNION ALL SELECT 9 AS "a", 8 AS "b" UNION ALL SELECT 12 AS "a", 10 AS "b"), values1 AS (SELECT "a", "b", "a" BETWEEN 0 AND "b" AS "bet1", "a" NOT BETWEEN 0 AND "b" AS "nbet1" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
databricks = """
WITH values0 AS (SELECT * FROM (VALUES (1, 2), (3, 4), (6, 6), (9, 8), (12, 10)) AS `_values` (`a`, `b`)), values1 AS (SELECT `a`, `b`, `a` BETWEEN 0 AND `b` AS `bet1`, `a` NOT BETWEEN 0 AND `b` AS `nbet1` FROM values0) SELECT * FROM values1 ORDER BY `a` ASC NULLS FIRST
"""
datafusion = """
WITH values0 AS (SELECT * FROM (VALUES (1, 2), (3, 4), (6, 6), (9, 8), (12, 10)) AS "_values" ("a", "b")), values1 AS (SELECT "a", "b", "a" BETWEEN 0 AND "b" AS "bet1", "a" NOT BETWEEN 0 AND "b" AS "nbet1" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
dremio = """
WITH values0 AS (SELECT * FROM (VALUES (1, 2), (3, 4), (6, 6), (9, 8), (12, 10)) AS "_values" ("a", "b")), values1 AS (SELECT "a", "b", "a" BETWEEN 0 AND "b" AS "bet1", "a" NOT BETWEEN 0 AND "b" AS "nbet1" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
duckdb = """
WITH values0 AS (SELECT * FROM (VALUES (1, 2), (3, 4), (6, 6), (9, 8), (12, 10)) AS "_values" ("a", "b")), values1 AS (SELECT "a", "b", "a" BETWEEN 0 AND "b" AS "bet1", "a" NOT BETWEEN 0 AND "b" AS "nbet1" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
mysql = """
WITH values0 AS (SELECT * FROM (VALUES ROW(1, 2), ROW(3, 4), ROW(6, 6), ROW(9, 8), ROW(12, 10)) AS `_values` (`a`, `b`)), values1 AS (SELECT `a`, `b`, `a` BETWEEN 0 AND `b` AS `bet1`, `a` NOT BETWEEN 0 AND `b` AS `nbet1` FROM values0) SELECT * FROM values1 ORDER BY `a` ASC
"""
postgres = """
WITH values0 AS (SELECT * FROM (VALUES (1, 2), (3, 4), (6, 6), (9, 8), (12, 10)) AS "_values" ("a", "b")), values1 AS (SELECT "a", "b", "a" BETWEEN 0 AND "b" AS "bet1", "a" NOT BETWEEN 0 AND "b" AS "nbet1" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
redshift = """
WITH values0 AS (SELECT 1 AS "a", 2 AS "b" UNION ALL SELECT 3 AS "a", 4 AS "b" UNION ALL SELECT 6 AS "a", 6 AS "b" UNION ALL SELECT 9 AS "a", 8 AS "b" UNION ALL SELECT 12 AS "a", 10 AS "b"), values1 AS (SELECT "a", "b", "a" BETWEEN 0 AND "b" AS "bet1", "a" NOT BETWEEN 0 AND "b" AS "nbet1" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
snowflake = """
WITH values0 AS (SELECT "COLUMN1" AS "a", "COLUMN2" AS "b" FROM (VALUES (1, 2), (3, 4), (6, 6), (9, 8), (12, 10))), values1 AS (SELECT "a", "b", "a" BETWEEN 0 AND "b" AS "bet1", "a" NOT BETWEEN 0 AND "b" AS "nbet1" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
result = '''
+----+----+-------+-------+
| a  | b  | bet1  | nbet1 |
+----+----+-------+-------+
| 1  | 2  | true  | false |
| 3  | 4  | true  | false |
| 6  | 6  | true  | false |
| 9  | 8  | false | true  |
| 12 | 10 | false | true  |
+----+----+-------+-------+
'''

[cast_numeric]
athena = """
WITH values0 AS (SELECT * FROM (VALUES ('0'), ('1')) AS "_values" ("a")), values1 AS (SELECT "a", CAST("a" AS TINYINT) AS "i8", CAST("a" AS SMALLINT) AS "u8", CAST("a" AS SMALLINT) AS "i16", CAST("a" AS INT) AS "u16", CAST("a" AS INT) AS "i32", CAST("a" AS BIGINT) AS "u32", CAST("a" AS BIGINT) AS "i64", CAST("a" AS DOUBLE) AS "f16", CAST("a" AS DOUBLE) AS "f32", CAST("a" AS DOUBLE) AS "f64" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
bigquery = """
WITH values0 AS (SELECT '0' AS `a` UNION ALL SELECT '1' AS `a`), values1 AS (SELECT `a`, CAST(`a` AS INT) AS `i8`, CAST(`a` AS INT) AS `u8`, CAST(`a` AS INT) AS `i16`, CAST(`a` AS INT) AS `u16`, CAST(`a` AS INT) AS `i32`, CAST(`a` AS INT) AS `u32`, CAST(`a` AS INT) AS `i64`, CAST(`a` AS float64) AS `f16`, CAST(`a` AS float64) AS `f32`, CAST(`a` AS float64) AS `f64` FROM values0) SELECT * FROM values1 ORDER BY `a` ASC NULLS FIRST
"""
clickhouse = """
WITH values0 AS (SELECT '0' AS "a" UNION ALL SELECT '1' AS "a"), values1 AS (SELECT "a", CASE WHEN "a" IS NOT NULL THEN CAST("a" AS TINYINT) ELSE NULL END AS "i8", CASE WHEN "a" IS NOT NULL THEN CAST("a" AS SMALLINT) ELSE NULL END AS "u8", CASE WHEN "a" IS NOT NULL THEN CAST("a" AS SMALLINT) ELSE NULL END AS "i16", CASE WHEN "a" IS NOT NULL THEN CAST("a" AS INT) ELSE NULL END AS "u16", CASE WHEN "a" IS NOT NULL THEN CAST("a" AS INT) ELSE NULL END AS "i32", CASE WHEN "a" IS NOT NULL THEN CAST("a" AS BIGINT) ELSE NULL END AS "u32", CASE WHEN "a" IS NOT NULL THEN CAST("a" AS BIGINT) ELSE NULL END AS "i64", CASE WHEN "a" IS NOT NULL THEN CAST("a" AS FLOAT) ELSE NULL END AS "f16", CASE WHEN "a" IS NOT NULL THEN CAST("a" AS FLOAT) ELSE NULL END AS "f32", CASE WHEN "a" IS NOT NULL THEN CAST("a" AS DOUBLE) ELSE NULL END AS "f64" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
databricks = """
WITH values0 AS (SELECT * FROM (VALUES ('0'), ('1')) AS `_values` (`a`)), values1 AS (SELECT `a`, CAST(`a` AS TINYINT) AS `i8`, CAST(`a` AS SMALLINT) AS `u8`, CAST(`a` AS SMALLINT) AS `i16`, CAST(`a` AS INT) AS `u16`, CAST(`a` AS INT) AS `i32`, CAST(`a` AS BIGINT) AS `u32`, CAST(`a` AS BIGINT) AS `i64`, CAST(`a` AS FLOAT) AS `f16`, CAST(`a` AS FLOAT) AS `f32`, CAST(`a` AS DOUBLE) AS `f64` FROM values0) SELECT * FROM values1 ORDER BY `a` ASC NULLS FIRST
"""
datafusion = """
WITH values0 AS (SELECT * FROM (VALUES ('0'), ('1')) AS "_values" ("a")), values1 AS (SELECT "a", CAST("a" AS TINYINT) AS "i8", CAST("a" AS SMALLINT) AS "u8", CAST("a" AS SMALLINT) AS "i16", CAST("a" AS INT) AS "u16", CAST("a" AS INT) AS "i32", CAST("a" AS BIGINT) AS "u32", CAST("a" AS BIGINT) AS "i64", CAST("a" AS FLOAT) AS "f16", CAST("a" AS FLOAT) AS "f32", CAST("a" AS DOUBLE) AS "f64" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
dremio = """
WITH values0 AS (SELECT * FROM (VALUES ('0'), ('1')) AS "_values" ("a")), values1 AS (SELECT "a", CAST("a" AS INT) AS "i8", CAST("a" AS INT) AS "u8", CAST("a" AS INT) AS "i16", CAST("a" AS INT) AS "u16", CAST("a" AS INT) AS "i32", CAST("a" AS BIGINT) AS "u32", CAST("a" AS BIGINT) AS "i64", CAST("a" AS FLOAT) AS "f16", CAST("a" AS FLOAT) AS "f32", CAST("a" AS DOUBLE) AS "f64" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
duckdb = """
WITH values0 AS (SELECT * FROM (VALUES ('0'), ('1')) AS "_values" ("a")), values1 AS (SELECT "a", CAST("a" AS TINYINT) AS "i8", CAST("a" AS SMALLINT) AS "u8", CAST("a" AS SMALLINT) AS "i16", CAST("a" AS INT) AS "u16", CAST("a" AS INT) AS "i32", CAST("a" AS BIGINT) AS "u32", CAST("a" AS BIGINT) AS "i64", CAST("a" AS FLOAT) AS "f16", CAST("a" AS FLOAT) AS "f32", CAST("a" AS DOUBLE) AS "f64" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
mysql = """
WITH values0 AS (SELECT * FROM (VALUES ROW('0'), ROW('1')) AS `_values` (`a`)), values1 AS (SELECT `a`, CAST(`a` AS SIGNED) AS `i8`, CAST(`a` AS UNSIGNED) AS `u8`, CAST(`a` AS SIGNED) AS `i16`, CAST(`a` AS UNSIGNED) AS `u16`, CAST(`a` AS SIGNED) AS `i32`, CAST(`a` AS UNSIGNED) AS `u32`, CAST(`a` AS SIGNED) AS `i64`, CAST(`a` AS FLOAT) AS `f16`, CAST(`a` AS FLOAT) AS `f32`, CAST(`a` AS DOUBLE) AS `f64` FROM values0) SELECT * FROM values1 ORDER BY `a` ASC
"""
postgres = """
WITH values0 AS (SELECT * FROM (VALUES ('0'), ('1')) AS "_values" ("a")), values1 AS (SELECT "a", CAST("a" AS SMALLINT) AS "i8", CAST("a" AS SMALLINT) AS "u8", CAST("a" AS SMALLINT) AS "i16", CAST("a" AS INTEGER) AS "u16", CAST("a" AS INTEGER) AS "i32", CAST("a" AS BIGINT) AS "u32", CAST("a" AS BIGINT) AS "i64", CAST("a" AS REAL) AS "f16", CAST("a" AS REAL) AS "f32", CAST("a" AS DOUBLE PRECISION) AS "f64" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
redshift = """
WITH values0 AS (SELECT '0' AS "a" UNION ALL SELECT '1' AS "a"), values1 AS (SELECT "a", CASE WHEN "a" IS NOT NULL THEN CAST("a" AS SMALLINT) ELSE NULL END AS "i8", CASE WHEN "a" IS NOT NULL THEN CAST("a" AS SMALLINT) ELSE NULL END AS "u8", CASE WHEN "a" IS NOT NULL THEN CAST("a" AS SMALLINT) ELSE NULL END AS "i16", CASE WHEN "a" IS NOT NULL THEN CAST("a" AS INTEGER) ELSE NULL END AS "u16", CASE WHEN "a" IS NOT NULL THEN CAST("a" AS INTEGER) ELSE NULL END AS "i32", CASE WHEN "a" IS NOT NULL THEN CAST("a" AS BIGINT) ELSE NULL END AS "u32", CASE WHEN "a" IS NOT NULL THEN CAST("a" AS BIGINT) ELSE NULL END AS "i64", CASE WHEN "a" IS NOT NULL THEN CAST("a" AS REAL) ELSE NULL END AS "f16", CASE WHEN "a" IS NOT NULL THEN CAST("a" AS REAL) ELSE NULL END AS "f32", CASE WHEN "a" IS NOT NULL THEN CAST("a" AS DOUBLE PRECISION) ELSE NULL END AS "f64" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
snowflake = """
WITH values0 AS (SELECT "COLUMN1" AS "a" FROM (VALUES ('0'), ('1'))), values1 AS (SELECT "a", CAST("a" AS TINYINT) AS "i8", CAST("a" AS SMALLINT) AS "u8", CAST("a" AS SMALLINT) AS "i16", CAST("a" AS INTEGER) AS "u16", CAST("a" AS INTEGER) AS "i32", CAST("a" AS BIGINT) AS "u32", CAST("a" AS BIGINT) AS "i64", CAST("a" AS FLOAT) AS "f16", CAST("a" AS FLOAT) AS "f32", CAST("a" AS DOUBLE) AS "f64" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
result = '''
+---+----+----+-----+-----+-----+-----+-----+-----+-----+-----+
| a | i8 | u8 | i16 | u16 | i32 | u32 | i64 | f16 | f32 | f64 |
+---+----+----+-----+-----+-----+-----+-----+-----+-----+-----+
| 0 | 0  | 0  | 0   | 0   | 0   | 0   | 0   | 0   | 0   | 0   |
| 1 | 1  | 1  | 1   | 1   | 1   | 1   | 1   | 1   | 1   | 1   |
+---+----+----+-----+-----+-----+-----+-----+-----+-----+-----+
'''


[cast_string]
athena = """
WITH values0 AS (SELECT * FROM (VALUES (0, true, 'A', NULL), (1, false, 'BB', 1.5), (NULL, NULL, 'CCC', 2.25)) AS "_values" ("a", "c", "d", "b")), values1 AS (SELECT CAST("a" AS VARCHAR) AS "a", CAST("b" AS VARCHAR) AS "b", CAST("c" AS VARCHAR) AS "c", CAST("d" AS VARCHAR) AS "d" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
bigquery = """
WITH values0 AS (SELECT 0 AS `a`, true AS `c`, 'A' AS `d`, NULL AS `b` UNION ALL SELECT 1 AS `a`, false AS `c`, 'BB' AS `d`, 1.5 AS `b` UNION ALL SELECT NULL AS `a`, NULL AS `c`, 'CCC' AS `d`, 2.25 AS `b`), values1 AS (SELECT CAST(`a` AS STRING) AS `a`, CAST(`b` AS STRING) AS `b`, CAST(`c` AS STRING) AS `c`, CAST(`d` AS STRING) AS `d` FROM values0) SELECT * FROM values1 ORDER BY `a` ASC NULLS FIRST
"""
clickhouse = """
WITH values0 AS (SELECT 0 AS "a", true AS "c", 'A' AS "d", NULL AS "b" UNION ALL SELECT 1 AS "a", false AS "c", 'BB' AS "d", 1.5 AS "b" UNION ALL SELECT NULL AS "a", NULL AS "c", 'CCC' AS "d", 2.25 AS "b"), values1 AS (SELECT CASE WHEN "a" IS NOT NULL THEN CAST("a" AS VARCHAR) ELSE NULL END AS "a", CASE WHEN "b" IS NOT NULL THEN CAST("b" AS VARCHAR) ELSE NULL END AS "b", CASE WHEN "c" IS NOT NULL THEN CAST("c" AS VARCHAR) ELSE NULL END AS "c", CASE WHEN "d" IS NOT NULL THEN CAST("d" AS VARCHAR) ELSE NULL END AS "d" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
databricks = """
WITH values0 AS (SELECT * FROM (VALUES (0, true, 'A', NULL), (1, false, 'BB', 1.5), (NULL, NULL, 'CCC', 2.25)) AS `_values` (`a`, `c`, `d`, `b`)), values1 AS (SELECT CAST(`a` AS STRING) AS `a`, CAST(`b` AS STRING) AS `b`, CAST(`c` AS STRING) AS `c`, CAST(`d` AS STRING) AS `d` FROM values0) SELECT * FROM values1 ORDER BY `a` ASC NULLS FIRST
"""
datafusion = """
WITH values0 AS (SELECT * FROM (VALUES (0, true, 'A', NULL), (1, false, 'BB', 1.5), (NULL, NULL, 'CCC', 2.25)) AS "_values" ("a", "c", "d", "b")), values1 AS (SELECT CAST("a" AS STRING) AS "a", CAST("b" AS STRING) AS "b", CASE WHEN ("c" = true) THEN 'true' WHEN ("c" = false) THEN 'false' ELSE NULL END AS "c", CAST("d" AS STRING) AS "d" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
dremio = """
WITH values0 AS (SELECT * FROM (VALUES (0, true, 'A', NULL), (1, false, 'BB', 1.5), (NULL, NULL, 'CCC', 2.25)) AS "_values" ("a", "c", "d", "b")), values1 AS (SELECT CAST("a" AS VARCHAR) AS "a", CAST("b" AS VARCHAR) AS "b", CAST("c" AS VARCHAR) AS "c", CAST("d" AS VARCHAR) AS "d" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
duckdb = """
WITH values0 AS (SELECT * FROM (VALUES (0, true, 'A', NULL), (1, false, 'BB', 1.5), (NULL, NULL, 'CCC', 2.25)) AS "_values" ("a", "c", "d", "b")), values1 AS (SELECT CAST("a" AS VARCHAR) AS "a", CAST("b" AS VARCHAR) AS "b", CAST("c" AS VARCHAR) AS "c", CAST("d" AS VARCHAR) AS "d" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
mysql = """
WITH values0 AS (SELECT * FROM (VALUES ROW(0, true, 'A', NULL), ROW(1, false, 'BB', 1.5), ROW(NULL, NULL, 'CCC', 2.25)) AS `_values` (`a`, `c`, `d`, `b`)), values1 AS (SELECT CAST(`a` AS CHAR) AS `a`, CAST(`b` AS CHAR) AS `b`, CASE WHEN (`c` = true) THEN 'true' WHEN (`c` = false) THEN 'false' ELSE NULL END AS `c`, CAST(`d` AS CHAR) AS `d` FROM values0) SELECT * FROM values1 ORDER BY `a` ASC
"""
postgres = """
WITH values0 AS (SELECT * FROM (VALUES (0, true, 'A', NULL), (1, false, 'BB', 1.5), (NULL, NULL, 'CCC', 2.25)) AS "_values" ("a", "c", "d", "b")), values1 AS (SELECT CAST("a" AS TEXT) AS "a", CAST("b" AS TEXT) AS "b", CAST("c" AS TEXT) AS "c", CAST("d" AS TEXT) AS "d" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
redshift = """
WITH values0 AS (SELECT 0 AS "a", true AS "c", 'A' AS "d", NULL AS "b" UNION ALL SELECT 1 AS "a", false AS "c", 'BB' AS "d", 1.5 AS "b" UNION ALL SELECT NULL AS "a", NULL AS "c", 'CCC' AS "d", 2.25 AS "b"), values1 AS (SELECT CASE WHEN "a" IS NOT NULL THEN CAST("a" AS TEXT) ELSE NULL END AS "a", CASE WHEN "b" IS NOT NULL THEN CAST("b" AS TEXT) ELSE NULL END AS "b", CASE WHEN "c" IS NOT NULL THEN CASE WHEN ("c" = true) THEN 'true' WHEN ("c" = false) THEN 'false' ELSE NULL END ELSE NULL END AS "c", CASE WHEN "d" IS NOT NULL THEN CAST("d" AS TEXT) ELSE NULL END AS "d" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
snowflake = """
WITH values0 AS (SELECT "COLUMN1" AS "a", "COLUMN2" AS "c", "COLUMN3" AS "d", "COLUMN4" AS "b" FROM (VALUES (0, true, 'A', NULL), (1, false, 'BB', 1.5), (NULL, NULL, 'CCC', 2.25))), values1 AS (SELECT CAST("a" AS VARCHAR) AS "a", CAST("b" AS VARCHAR) AS "b", CAST("c" AS VARCHAR) AS "c", CAST("d" AS VARCHAR) AS "d" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
result = '''
+---+------+-------+-----+
| a | b    | c     | d   |
+---+------+-------+-----+
|   | 2.25 |       | CCC |
| 0 |      | true  | A   |
| 1 | 1.5  | false | BB  |
+---+------+-------+-----+
'''

[non_finite_numbers]
athena = """
WITH values0 AS (SELECT * FROM (VALUES (0)) AS "_values" ("a")), values1 AS (SELECT "a", NULL AS "ninf", NULL AS "nan", NULL AS "inf" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
bigquery = """
WITH values0 AS (SELECT 0 AS `a`), values1 AS (SELECT `a`, CAST('-inf' AS float64) AS `ninf`, CAST('NaN' AS float64) AS `nan`, CAST('inf' AS float64) AS `inf` FROM values0) SELECT * FROM values1 ORDER BY `a` ASC NULLS FIRST
"""
clickhouse = """
WITH values0 AS (SELECT 0 AS "a"), values1 AS (SELECT "a", CAST('-inf' AS DOUBLE) AS "ninf", CAST('NaN' AS DOUBLE) AS "nan", CAST('inf' AS DOUBLE) AS "inf" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
databricks = """
WITH values0 AS (SELECT * FROM (VALUES (0)) AS `_values` (`a`)), values1 AS (SELECT `a`, CAST('-inf' AS DOUBLE) AS `ninf`, CAST('NaN' AS DOUBLE) AS `nan`, CAST('inf' AS DOUBLE) AS `inf` FROM values0) SELECT * FROM values1 ORDER BY `a` ASC NULLS FIRST
"""
datafusion = """
WITH values0 AS (SELECT * FROM (VALUES (0)) AS "_values" ("a")), values1 AS (SELECT "a", CAST('-inf' AS DOUBLE) AS "ninf", CAST('NaN' AS DOUBLE) AS "nan", CAST('inf' AS DOUBLE) AS "inf" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
dremio = """
WITH values0 AS (SELECT * FROM (VALUES (0)) AS "_values" ("a")), values1 AS (SELECT "a", CAST('-inf' AS DOUBLE) AS "ninf", CAST('NaN' AS DOUBLE) AS "nan", CAST('inf' AS DOUBLE) AS "inf" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
duckdb = """
WITH values0 AS (SELECT * FROM (VALUES (0)) AS "_values" ("a")), values1 AS (SELECT "a", CAST('-inf' AS DOUBLE) AS "ninf", CAST('NaN' AS DOUBLE) AS "nan", CAST('inf' AS DOUBLE) AS "inf" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
mysql = """
WITH values0 AS (SELECT * FROM (VALUES ROW(0)) AS `_values` (`a`)), values1 AS (SELECT `a`, NULL AS `ninf`, NULL AS `nan`, NULL AS `inf` FROM values0) SELECT * FROM values1 ORDER BY `a` ASC
"""
postgres = """
WITH values0 AS (SELECT * FROM (VALUES (0)) AS "_values" ("a")), values1 AS (SELECT "a", CAST('-inf' AS DOUBLE PRECISION) AS "ninf", CAST('NaN' AS DOUBLE PRECISION) AS "nan", CAST('inf' AS DOUBLE PRECISION) AS "inf" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
redshift = """
WITH values0 AS (SELECT 0 AS "a"), values1 AS (SELECT "a", CAST('-inf' AS DOUBLE PRECISION) AS "ninf", CAST('NaN' AS DOUBLE PRECISION) AS "nan", CAST('inf' AS DOUBLE PRECISION) AS "inf" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
snowflake = """
WITH values0 AS (SELECT "COLUMN1" AS "a" FROM (VALUES (0))), values1 AS (SELECT "a", CAST('-inf' AS DOUBLE) AS "ninf", CAST('NaN' AS DOUBLE) AS "nan", CAST('inf' AS DOUBLE) AS "inf" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
result = '''
+---+------+-----+-----+
| a | ninf | nan | inf |
+---+------+-----+-----+
| 0 | -inf | NaN | inf |
+---+------+-----+-----+
'''

[scalar_math_functions]
athena = """
WITH values0 AS (SELECT * FROM (VALUES (0, -1.8, 0.1), (1, -1.0, 0.2), (2, 0.0, 0.4), (3, 1.0, 0.6), (4, 1.8, 0.8), (5, NULL, NULL)) AS "_values" ("a", "b", "c")), values1 AS (SELECT "a", abs("b") AS "abs", acos("c") AS "acos", asin("c") AS "asin", atan("c") AS "atan", atan2("c", "a") AS "atan2", CEIL("b") AS "ceil", cos("b") AS "cos", exp("b") AS "exp", FLOOR("b") AS "floor", ln("c") AS "ln", log10("c") AS "log", log10("c") AS "log10", log2("c") AS "log2", pow("b", "a") AS "power", round("b") AS "round", sin("b") AS "sin", sqrt("c") AS "sqrt", tan("b") AS "tan" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
bigquery = """
WITH values0 AS (SELECT 0 AS `a`, -1.8 AS `b`, 0.1 AS `c` UNION ALL SELECT 1 AS `a`, -1.0 AS `b`, 0.2 AS `c` UNION ALL SELECT 2 AS `a`, 0.0 AS `b`, 0.4 AS `c` UNION ALL SELECT 3 AS `a`, 1.0 AS `b`, 0.6 AS `c` UNION ALL SELECT 4 AS `a`, 1.8 AS `b`, 0.8 AS `c` UNION ALL SELECT 5 AS `a`, NULL AS `b`, NULL AS `c`), values1 AS (SELECT `a`, abs(`b`) AS `abs`, acos(`c`) AS `acos`, asin(`c`) AS `asin`, atan(`c`) AS `atan`, atan2(`c`, `a`) AS `atan2`, CEIL(`b`) AS `ceil`, cos(`b`) AS `cos`, exp(`b`) AS `exp`, FLOOR(`b`) AS `floor`, ln(`c`) AS `ln`, log10(`c`) AS `log`, log10(`c`) AS `log10`, log(`c`, 2) AS `log2`, pow(`b`, `a`) AS `power`, round(`b`) AS `round`, sin(`b`) AS `sin`, sqrt(`c`) AS `sqrt`, tan(`b`) AS `tan` FROM values0) SELECT * FROM values1 ORDER BY `a` ASC NULLS FIRST
"""
clickhouse = """
WITH values0 AS (SELECT 0 AS "a", -1.8 AS "b", 0.1 AS "c" UNION ALL SELECT 1 AS "a", -1.0 AS "b", 0.2 AS "c" UNION ALL SELECT 2 AS "a", 0.0 AS "b", 0.4 AS "c" UNION ALL SELECT 3 AS "a", 1.0 AS "b", 0.6 AS "c" UNION ALL SELECT 4 AS "a", 1.8 AS "b", 0.8 AS "c" UNION ALL SELECT 5 AS "a", NULL AS "b", NULL AS "c"), values1 AS (SELECT "a", abs("b") AS "abs", acos("c") AS "acos", asin("c") AS "asin", atan("c") AS "atan", atan2("c", "a") AS "atan2", CEIL("b") AS "ceil", cos("b") AS "cos", exp("b") AS "exp", FLOOR("b") AS "floor", ln("c") AS "ln", log10("c") AS "log", log10("c") AS "log10", log2("c") AS "log2", pow("b", "a") AS "power", round("b") AS "round", sin("b") AS "sin", sqrt("c") AS "sqrt", tan("b") AS "tan" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
databricks = """
WITH values0 AS (SELECT * FROM (VALUES (0, -1.8, 0.1), (1, -1.0, 0.2), (2, 0.0, 0.4), (3, 1.0, 0.6), (4, 1.8, 0.8), (5, NULL, NULL)) AS `_values` (`a`, `b`, `c`)), values1 AS (SELECT `a`, abs(`b`) AS `abs`, acos(`c`) AS `acos`, asin(`c`) AS `asin`, atan(`c`) AS `atan`, atan2(`c`, `a`) AS `atan2`, CEIL(`b`) AS `ceil`, cos(`b`) AS `cos`, exp(`b`) AS `exp`, FLOOR(`b`) AS `floor`, ln(`c`) AS `ln`, log10(`c`) AS `log`, log10(`c`) AS `log10`, log2(`c`) AS `log2`, pow(`b`, `a`) AS `power`, round(`b`) AS `round`, sin(`b`) AS `sin`, sqrt(`c`) AS `sqrt`, tan(`b`) AS `tan` FROM values0) SELECT * FROM values1 ORDER BY `a` ASC NULLS FIRST
"""
datafusion = """
WITH values0 AS (SELECT * FROM (VALUES (0, -1.8, 0.1), (1, -1.0, 0.2), (2, 0.0, 0.4), (3, 1.0, 0.6), (4, 1.8, 0.8), (5, NULL, NULL)) AS "_values" ("a", "b", "c")), values1 AS (SELECT "a", abs("b") AS "abs", acos("c") AS "acos", asin("c") AS "asin", atan("c") AS "atan", atan2("c", "a") AS "atan2", CEIL("b") AS "ceil", cos("b") AS "cos", exp("b") AS "exp", FLOOR("b") AS "floor", ln("c") AS "ln", log("c") AS "log", log10("c") AS "log10", log2("c") AS "log2", pow("b", "a") AS "power", round("b") AS "round", sin("b") AS "sin", sqrt("c") AS "sqrt", tan("b") AS "tan" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
dremio = """
WITH values0 AS (SELECT * FROM (VALUES (0, -1.8, 0.1), (1, -1.0, 0.2), (2, 0.0, 0.4), (3, 1.0, 0.6), (4, 1.8, 0.8), (5, NULL, NULL)) AS "_values" ("a", "b", "c")), values1 AS (SELECT "a", abs("b") AS "abs", acos("c") AS "acos", asin("c") AS "asin", atan("c") AS "atan", atan2("c", "a") AS "atan2", CEIL("b") AS "ceil", cos("b") AS "cos", exp("b") AS "exp", FLOOR("b") AS "floor", log("c") AS "ln", log10("c") AS "log", log10("c") AS "log10", log(2, "c") AS "log2", pow("b", "a") AS "power", round("b") AS "round", sin("b") AS "sin", sqrt("c") AS "sqrt", tan("b") AS "tan" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
duckdb = """
WITH values0 AS (SELECT * FROM (VALUES (0, -1.8, 0.1), (1, -1.0, 0.2), (2, 0.0, 0.4), (3, 1.0, 0.6), (4, 1.8, 0.8), (5, NULL, NULL)) AS "_values" ("a", "b", "c")), values1 AS (SELECT "a", abs("b") AS "abs", acos("c") AS "acos", asin("c") AS "asin", atan("c") AS "atan", atan2("c", "a") AS "atan2", CEIL("b") AS "ceil", cos("b") AS "cos", pow(2.718281828459045, "b") AS "exp", FLOOR("b") AS "floor", ln("c") AS "ln", log("c") AS "log", log10("c") AS "log10", log2("c") AS "log2", pow("b", "a") AS "power", round("b") AS "round", sin("b") AS "sin", sqrt("c") AS "sqrt", tan("b") AS "tan" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
mysql = """
WITH values0 AS (SELECT * FROM (VALUES ROW(0, -1.8, 0.1), ROW(1, -1.0, 0.2), ROW(2, 0.0, 0.4), ROW(3, 1.0, 0.6), ROW(4, 1.8, 0.8), ROW(5, NULL, NULL)) AS `_values` (`a`, `b`, `c`)), values1 AS (SELECT `a`, abs(`b`) AS `abs`, acos(`c`) AS `acos`, asin(`c`) AS `asin`, atan(`c`) AS `atan`, atan2(`c`, `a`) AS `atan2`, CEIL(`b`) AS `ceil`, cos(`b`) AS `cos`, exp(`b`) AS `exp`, FLOOR(`b`) AS `floor`, ln(`c`) AS `ln`, log10(`c`) AS `log`, log10(`c`) AS `log10`, log2(`c`) AS `log2`, pow(`b`, `a`) AS `power`, round(`b`) AS `round`, sin(`b`) AS `sin`, sqrt(`c`) AS `sqrt`, tan(`b`) AS `tan` FROM values0) SELECT * FROM values1 ORDER BY `a` ASC
"""
postgres = """
WITH values0 AS (SELECT * FROM (VALUES (0, -1.8, 0.1), (1, -1.0, 0.2), (2, 0.0, 0.4), (3, 1.0, 0.6), (4, 1.8, 0.8), (5, NULL, NULL)) AS "_values" ("a", "b", "c")), values1 AS (SELECT "a", abs("b") AS "abs", acos("c") AS "acos", asin("c") AS "asin", atan("c") AS "atan", atan2("c", "a") AS "atan2", CEIL("b") AS "ceil", cos("b") AS "cos", exp("b") AS "exp", FLOOR("b") AS "floor", ln("c") AS "ln", log("c") AS "log", log(10, "c") AS "log10", log(2, "c") AS "log2", pow("b", "a") AS "power", round("b") AS "round", sin("b") AS "sin", sqrt("c") AS "sqrt", tan("b") AS "tan" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
redshift = """
WITH values0 AS (SELECT 0 AS "a", -1.8 AS "b", 0.1 AS "c" UNION ALL SELECT 1 AS "a", -1.0 AS "b", 0.2 AS "c" UNION ALL SELECT 2 AS "a", 0.0 AS "b", 0.4 AS "c" UNION ALL SELECT 3 AS "a", 1.0 AS "b", 0.6 AS "c" UNION ALL SELECT 4 AS "a", 1.8 AS "b", 0.8 AS "c" UNION ALL SELECT 5 AS "a", NULL AS "b", NULL AS "c"), values1 AS (SELECT "a", abs("b") AS "abs", acos("c") AS "acos", asin("c") AS "asin", atan("c") AS "atan", atan2("c", "a") AS "atan2", CEIL("b") AS "ceil", cos("b") AS "cos", exp("b") AS "exp", FLOOR("b") AS "floor", ln(CAST("c" AS DOUBLE PRECISION)) AS "ln", log(CAST("c" AS DOUBLE PRECISION)) AS "log", log(CAST("c" AS DOUBLE PRECISION)) AS "log10", ln(CAST("c" AS DOUBLE PRECISION)) / ln(2) AS "log2", pow("b", "a") AS "power", round("b") AS "round", sin("b") AS "sin", sqrt("c") AS "sqrt", tan("b") AS "tan" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
snowflake = """
WITH values0 AS (SELECT "COLUMN1" AS "a", "COLUMN2" AS "b", "COLUMN3" AS "c" FROM (VALUES (0, -1.8, 0.1), (1, -1.0, 0.2), (2, 0.0, 0.4), (3, 1.0, 0.6), (4, 1.8, 0.8), (5, NULL, NULL))), values1 AS (SELECT "a", abs("b") AS "abs", acos("c") AS "acos", asin("c") AS "asin", atan("c") AS "atan", atan2("c", "a") AS "atan2", CEIL("b") AS "ceil", cos("b") AS "cos", exp("b") AS "exp", FLOOR("b") AS "floor", ln("c") AS "ln", log(10, "c") AS "log", log(10, "c") AS "log10", log(2, "c") AS "log2", pow("b", "a") AS "power", round("b") AS "round", sin("b") AS "sin", sqrt("c") AS "sqrt", tan("b") AS "tan" FROM values0) SELECT * FROM values1 ORDER BY "a" ASC NULLS FIRST
"""
result = '''
+---+-----+--------------------+---------------------+---------------------+---------------------+------+---------------------+---------------------+-------+---------------------+----------------------+----------------------+---------------------+---------+-------+---------------------+---------------------+--------------------+
| a | abs | acos               | asin                | atan                | atan2               | ceil | cos                 | exp                 | floor | ln                  | log                  | log10                | log2                | power   | round | sin                 | sqrt                | tan                |
+---+-----+--------------------+---------------------+---------------------+---------------------+------+---------------------+---------------------+-------+---------------------+----------------------+----------------------+---------------------+---------+-------+---------------------+---------------------+--------------------+
| 0 | 1.8 | 1.4706289056333368 | 0.1001674211615598  | 0.09966865249116204 | 1.5707963267948966  | -1   | -0.2272020946930871 | 0.16529888822158653 | -2    | -2.3025850929940455 | -1                   | -1                   | -3.321928094887362  | 1       | -2    | -0.9738476308781951 | 0.31622776601683794 | 4.286261674628062  |
| 1 | 1   | 1.3694384060045657 | 0.2013579207903308  | 0.19739555984988078 | 0.19739555984988078 | -1   | 0.5403023058681398  | 0.36787944117144233 | -1    | -1.6094379124341003 | -0.6989700043360187  | -0.6989700043360187  | -2.321928094887362  | -1      | -1    | -0.8414709848078965 | 0.4472135954999579  | -1.557407724654902 |
| 2 | 0   | 1.1592794807274085 | 0.41151684606748806 | 0.3805063771123649  | 0.19739555984988078 | 0    | 1                   | 1                   | 0     | -0.916290731874155  | -0.3979400086720376  | -0.3979400086720376  | -1.3219280948873622 | 0       | 0     | 0                   | 0.6324555320336759  | 0                  |
| 3 | 1   | 0.9272952180016123 | 0.6435011087932844  | 0.5404195002705842  | 0.19739555984988075 | 1    | 0.5403023058681398  | 2.718281828459045   | 1     | -0.5108256237659907 | -0.2218487496163564  | -0.2218487496163564  | -0.7369655941662062 | 1       | 1     | 0.8414709848078965  | 0.7745966692414834  | 1.557407724654902  |
| 4 | 1.8 | 0.6435011087932843 | 0.9272952180016123  | 0.6747409422235527  | 0.19739555984988078 | 2    | -0.2272020946930871 | 6.0496474644129465  | 1     | -0.2231435513142097 | -0.09691001300805639 | -0.09691001300805639 | -0.3219280948873623 | 10.4976 | 2     | 0.9738476308781951  | 0.8944271909999159  | -4.286261674628062 |
| 5 |     |                    |                     |                     |                     |      |                     |                     |       |                     |                      |                      |                     |         |       |                     |                     |                    |
+---+-----+--------------------+---------------------+---------------------+---------------------+------+---------------------+---------------------+-------+---------------------+----------------------+----------------------+---------------------+---------+-------+---------------------+---------------------+--------------------+
'''