name: build_test
on:
  pull_request:
    types: [ opened, synchronize ]
jobs:
  check-rust:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # pin@v3.5.2
      - name: Install pixi
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "${HOME}/.pixi/bin" >> $GITHUB_PATH
      - name: Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ hashFiles('pixi.lock') }}
          path: |
            ~/.cargo
            target
            .pixi
      - name: Check fmt
        run: pixi run check-rs-fmt
      - name: Check warnings
        run: pixi run check-rs-warnings
      - name: Check clippy
        run: pixi run check-rs-clippy

  test-rust:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - windows-2022
          - macos-11
    steps:
      - name: Check out repository code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # pin@v3.5.2
      - name: Install pixi (linux / osx)
        if: ${{ runner.os != 'Windows' }}
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "${HOME}/.pixi/bin" >> $GITHUB_PATH
      - name: Install pixi (windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          iwr -useb https://pixi.sh/install.ps1 | iex
          echo "${HOME}/AppData/Local/pixi/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ hashFiles('pixi.lock') }}
          path: |
            ~/.cargo
            target
            .pixi
      - name: Test rust
        run: |
          pixi install -vvv
          pixi run test-rs --release
      - name: Upload test artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # pin@v3.1.2
        if: always()
        with:
          name: vegafusion-rt-test-images
          path: |
            vegafusion-runtime/tests/output

  build-vegafusion-wasm:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # pin@v3.5.2
      - name: Install pixi (linux / osx)
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "${HOME}/.pixi/bin" >> $GITHUB_PATH
      - name: Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ hashFiles('pixi.lock') }}
          path: |
            ~/.cargo
            target
            .pixi
      - name: Build package
        run: |
          pixi run pack-wasm
      - name: Upload artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # pin@v3.1.2
        with:
          name: vegafusion-wasm-packages
          path: vegafusion-wasm/pkg/vegafusion-wasm-*.tgz

  build-vegafusion-packages:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # pin@v3.5.2
      - name: Install pixi (linux / osx)
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "${HOME}/.pixi/bin" >> $GITHUB_PATH
      - name: Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ hashFiles('pixi.lock') }}
          path: |
            ~/.cargo
            target
            .pixi
      - name: Build vegafusion wheel
        run: |
          pixi run build-py-vegafusion
      - name: Upload artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # pin@v3.1.2
        with:
          name: vegafusion-packages
          path: |
            python/vegafusion/dist/*.whl
            python/vegafusion/dist/*.tar.gz

  build-vegafusion-jupyter-packages:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # pin@v3.5.2
      - name: Install pixi (linux / osx)
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "${HOME}/.pixi/bin" >> $GITHUB_PATH
      - name: Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ hashFiles('pixi.lock') }}
          path: |
            ~/.cargo
            target
            .pixi
      - name: Build vegafusion-jupyter wheel
        run: |
          echo JupyterLab Version: `pixi run jupyter-lab --version`
          pixi run build-py-jupyter
      - name: Upload artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # pin@v3.1.2
        with:
          name: vegafusion-jupyter-packages
          path: |
            python/vegafusion-jupyter/dist/*.whl
            python/vegafusion-jupyter/dist/*.tar.gz

  test-vegafusion-python:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - windows-2022
          - macos-11
    steps:
      - name: Check out repository code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # pin@v3.5.2
      - name: Install pixi (linux / osx)
        if: ${{ runner.os != 'Windows' }}
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "${HOME}/.pixi/bin" >> $GITHUB_PATH
      - name: Install pixi (windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          iwr -useb https://pixi.sh/install.ps1 | iex
          echo "${HOME}/AppData/Local/pixi/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ hashFiles('pixi.lock') }}
          path: |
            ~/.cargo
            target
            .pixi
      - name: Test vegafusion python
        run: |
          pixi run test-py-vegafusion

  test-vegafusion-jupyter:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - macos-11
          # # The windows case hangs after installing chromedriver-binary-auto
          # - windows-2022
    steps:
      - name: Check out repository code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # pin@v3.5.2
      - name: Install pixi (linux / osx)
        if: ${{ runner.os != 'Windows' }}
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "${HOME}/.pixi/bin" >> $GITHUB_PATH
      - name: Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ hashFiles('pixi.lock') }}
          path: |
            ~/.cargo
            target
            .pixi
      - name: Install pixi (windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          iwr -useb https://pixi.sh/install.ps1 | iex
          echo "${HOME}/AppData/Local/pixi/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Install Chrome
        uses: browser-actions/setup-chrome@f0ff752add8c926994566c80b3ceadfd03f24d12 # pin@latest
        with:
          chrome-version: stable
      - name: Test vegafusion jupyter
        run: |
          pixi install -vvv
          echo JupyterLab Version: `pixi run jupyter-lab --version`
          pixi run test-py-jupyter-headless
      - name: Upload test artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # pin@v3.1.2
        if: always()
        with:
          name: vegafusion-jupyter-test-failures
          path: |
            python/vegafusion-jupyter/tests/failures/*
