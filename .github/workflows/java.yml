name: java
on:
  pull_request:
    types: [ opened, synchronize ]
jobs:
  build-test-java-linux-64:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # pin@v2
      - name: Install pixi
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "${HOME}/.pixi/bin" >> $GITHUB_PATH
      - name: Test Java
        run: pixi run test-java
      - name: Copy native lib
        run: |
          mkdir -p native/linux-64
          cp target/release/libvegafusion_jni.so native/linux-64
      - name: Upload artifacts
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # pin@v2
        with:
          name: jni-native
          path: |
            native

  build-test-java-osx-64:
    runs-on: macos-11
    steps:
      - name: Check out repository code
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # pin@v2
      - name: Install pixi
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "${HOME}/.pixi/bin" >> $GITHUB_PATH
      - name: Test Java
        run: pixi run test-java
      - name: Copy native lib
        run: |
          mkdir -p native/osx-64
          cp target/release/libvegafusion_jni.dylib native/osx-64
      - name: Upload artifacts
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # pin@v2
        with:
          name: jni-native
          path: |
            native

  build-java-osx-arm64:
    runs-on: macos-11
    steps:
      - name: Check out repository code
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # pin@v2
      - name: Install pixi
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "${HOME}/.pixi/bin" >> $GITHUB_PATH
      - name: Build jni library
        run: |
          pixi run python automation/download_rust_target.py aarch64-apple-darwin 
          pixi run build-jni --target aarch64-apple-darwin
      - name: Copy native lib
        run: |
          mkdir -p native/osx-arm64
          cp target/aarch64-apple-darwin/release/libvegafusion_jni.dylib native/osx-arm64
      - name: Upload artifacts
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # pin@v2
        with:
          name: jni-native
          path: |
            native

  build-test-java-win-64:
    runs-on: windows-2022
    steps:
      - name: Check out repository code
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # pin@v2
      - name: Install pixi
        run: |
          iwr -useb https://pixi.sh/install.ps1 | iex
          echo "${HOME}/AppData/Local/pixi/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Test Java
        run: pixi run test-java-win
      - name: Copy native lib
        run: |
          mkdir -p native/win-64
          cp target/release/vegafusion_jni.dll native/win-64
      - name: Upload artifacts
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # pin@v2
        with:
          name: jni-native
          path: |
            native

  build-jar:
    runs-on: ubuntu-20.04
    needs:
      - build-test-java-linux-64
      - build-test-java-osx-64
      - build-java-osx-arm64
      - build-test-java-win-64
    steps:
      - name: Check out repository code
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # pin@v2
      - name: Install pixi
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "${HOME}/.pixi/bin" >> $GITHUB_PATH
      - name: Download jni libs
        uses: actions/download-artifact@cbed621e49e4c01b044d60f6c80ea4ed6328b281 # pin@v2
        with:
          name: jni-native
          path: jni-native
      - name: Build jar
        run: |
          pixi run build-jar /home/runner/work/vegafusion/vegafusion/jni-native
      - name: Upload jar
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # pin@v2
        with:
          name: jar
          path: |
            java/lib/build/libs/vegafusion-*.jar

  try-jar:
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - macos-11
          - windows-2022
    runs-on: ${{ matrix.os }}
    needs: [ build-jar ]
    steps:
      - name: Install Java
        uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2 # pin@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Download jar
        uses: actions/download-artifact@cbed621e49e4c01b044d60f6c80ea4ed6328b281 # pin@v2
        with:
          name: jar
          path: .
      - name: Run jar (non-Windows)
        if: ${{ runner.os != 'Windows' }}
        run: |
          java -jar vegafusion-*.jar
      - name: Run jar (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          $jarFile = Get-ChildItem -Path .\ -Filter "vegafusion-*.jar" | Select-Object -First 1
          java -jar $jarFile
